# generated by fastapi-codegen:
#   filename:  api.yaml
#   timestamp: 2025-04-18T02:56:48+00:00

from __future__ import annotations

from typing import Union
from uuid import UUID

from fastapi import FastAPI

from .models import (
    ApiV1EcommerceRecommendationFeedbackPostRequestBody,
    ApiV1EcommerceRecommendationFeedbackPostResponse,
    ApiV1EcommerceRecommendationUserGet200Response,
    ApiV1EcommerceRecommendationUserProductPost200Response,
    ErrorResponse,
    PingGet200Response,
)

app = FastAPI(
    title='TokoSawit ProductRecommendation API',
    description='This API provides recommendation system for TokoSawit. TokoSawit is an e-commerce platform, as part of the SawitPRO platform,\nthat provides a wide range of plantation equipment and supplies targetting Indonesian palm plantation smallholders.\n',
    termsOfService='https://www.sawitpro.com/term-and-condition',
    license={'name': 'proprietary', 'url': 'https://www.sawitpro.com/license'},
    version='1.0.0',
    servers=[
        {
            'url': 'https://tokosawit-product-recommendation.api.sawitpro.com',
            'description': 'The best project will be deployed in this API.',
        }
    ],
)


@app.post(
    '/api/v1/ecommerce/recommendation/feedback',
    response_model=ApiV1EcommerceRecommendationFeedbackPostResponse,
    responses={'400': {'model': ErrorResponse}},
)
def api_v1_ecommerce_recommendation_feedback_post(
    body: ApiV1EcommerceRecommendationFeedbackPostRequestBody = None,
) -> Union[ApiV1EcommerceRecommendationFeedbackPostResponse, ErrorResponse]:
    """
    Give a feedback to the recommendation system.

    """
    pass


@app.get(
    '/api/v1/ecommerce/recommendation/product/{product_id}',
    response_model=ApiV1EcommerceRecommendationUserProductPost200Response,
    responses={'404': {'model': ErrorResponse}},
)
def api_v1_ecommerce_recommendation_product_get(
    product_id: UUID,
) -> Union[ApiV1EcommerceRecommendationUserProductPost200Response, ErrorResponse]:
    """
        Get recommendation for a specific product. This will return list of products that are recommended for the product.
    This will return 10 products at most.

    """
    pass


@app.get(
    '/api/v1/ecommerce/recommendation/user/{user_id}',
    response_model=ApiV1EcommerceRecommendationUserGet200Response,
    responses={'404': {'model': ErrorResponse}},
)
def api_v1_ecommerce_recommendation_user_get(
    user_id: UUID,
) -> Union[ApiV1EcommerceRecommendationUserGet200Response, ErrorResponse]:
    """
        Get recommendation for a specific user. This will return list of products that are recommended for the user.
    This will return 10 products at most.

    """
    pass


@app.get(
    '/ping',
    response_model=PingGet200Response,
    responses={'401': {'model': ErrorResponse}},
)
def ping() -> Union[PingGet200Response, ErrorResponse]:
    """
    Ping the API to check if it is running.

    """
    return PingGet200Response(message='Pong')
