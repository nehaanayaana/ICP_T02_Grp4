# generated by fastapi-codegen:
#   filename:  api.yaml
#   timestamp: 2025-04-18T02:56:48+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional
from uuid import UUID

from pydantic import BaseModel, Field, RootModel


class RecommendedProductListItem(BaseModel):
    product_id: Optional[UUID] = Field(
        None,
        description='The ID of the product.\n',
        examples=['123e4567-e89b-12d3-a456-426614174000'],
    )
    name: Optional[str] = Field(
        None, description='The name of the product.\n', examples=['Fertilizer ABC']
    )
    category: Optional[str] = Field(
        None, description='The category of the product.\n', examples=['Fertilizer']
    )
    price: Optional[float] = Field(
        None, description='The price of the product in IDR.\n', examples=[100000]
    )
    recommendation_id: Optional[UUID] = Field(
        None,
        description='The ID of the recommendation. This will be used to give a feedback to the recommendation system,\nwhether the recommendation is good or not.\n',
        examples=['123e4567-e89b-12d3-a456-426614174000'],
    )
    relevance_score: Optional[float] = Field(
        None,
        description='The relevance score of the product based on the recommendation model.\n',
        examples=[0.95],
    )


class Action(Enum):
    clicked = 'clicked'
    added_to_cart = 'added_to_cart'
    purchased = 'purchased'
    reviewed = 'reviewed'


class ApiV1EcommerceRecommendationFeedbackPostRequestBody(BaseModel):
    user_id: Optional[UUID] = Field(
        None,
        description='The ID of the user that will be used to give a feedback to the recommendation system.\n',
        examples=['123e4567-e89b-12d3-a456-426614174000'],
    )
    product_id: Optional[UUID] = Field(
        None,
        description='The ID of the product that will be used to give a feedback to the recommendation system.\n',
        examples=['123e4567-e89b-12d3-a456-426614174000'],
    )
    recommendation_id: Optional[UUID] = Field(
        None,
        description='The ID of the recommendation that will be used to give a feedback to the recommendation system.\n',
        examples=['123e4567-e89b-12d3-a456-426614174000'],
    )
    action: Optional[Action] = Field(
        None,
        description='The action that will be used to give a feedback to the recommendation system.\n',
        examples=['clicked'],
    )


class PingGet200Response(BaseModel):
    message: Optional[str] = Field(
        None,
        description='The message that will be returned when the API is running.\n',
        examples=['Pong'],
    )


class ErrorResponse(BaseModel):
    message: Optional[str] = Field(
        None, description='The error message.\n', examples=['Not Found']
    )


class ApiV1EcommerceRecommendationFeedbackPostResponse(BaseModel):
    message: Optional[str] = Field(None, examples=['Feedback given successfully'])


class RecommendedProductList(RootModel[List[RecommendedProductListItem]]):
    root: List[RecommendedProductListItem]


class ApiV1EcommerceRecommendationUserGet200Response(BaseModel):
    items: Optional[RecommendedProductList] = None


class ApiV1EcommerceRecommendationUserProductPost200Response(BaseModel):
    items: Optional[RecommendedProductList] = None
